ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(!is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_kissesStd < 3, !is.na(night_owl), !is.na(has_social)) %>%
mutate(has_emoji = factor(has_emoji, labels = c("No", "Yes")),
night_owl = factor(night_owl, labels = c("No", "Yes")),
has_social = factor(has_social, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(has_emoji, has_social), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
has_emoji = "Emoji",
has_social = "Social Media")) %>%
ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_profileVisitsStd < 3, !is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_kissesStd < 3, !is.na(night_owl), !is.na(has_social)) %>%
mutate(has_emoji = factor(has_emoji, labels = c("No", "Yes")),
night_owl = factor(night_owl, labels = c("No", "Yes")),
has_social = factor(has_social, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(has_emoji, has_social), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
has_emoji = "Emoji",
has_social = "Social Media")) %>%
ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_profileVisitsStd < 3, !is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_kissesStd < 3, !is.na(night_owl), !is.na(has_social)) %>%
mutate(has_emoji = factor(has_emoji, labels = c("No", "Yes")),
night_owl = factor(night_owl, labels = c("No", "Yes")),
has_social = factor(has_social, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(has_emoji, has_social), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
has_emoji = "Emoji",
has_social = "Social Media")) %>%
ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_profileVisitsStd < 3, !is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_kissesStd < 3, !is.na(night_owl), !is.na(has_social)) %>%
mutate(has_emoji = factor(has_emoji, labels = c("No", "Yes")),
night_owl = factor(night_owl, labels = c("No", "Yes")),
has_social = factor(has_social, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(has_emoji, has_social), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
has_emoji = "Emoji",
has_social = "Social Media")) %>%
ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
df %>%
filter(counts_profileVisitsStd < 3, !is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
plot1 <- df %>%
filter(counts_kissesStd < 3, !is.na(night_owl), !is.na(has_social)) %>%
mutate(has_emoji = factor(has_emoji, labels = c("No", "Yes")),
night_owl = factor(night_owl, labels = c("No", "Yes")),
has_social = factor(has_social, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(has_emoji, has_social), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
has_emoji = "Emoji",
has_social = "Social Media")) %>%
ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
plot2 <- df %>%
filter(counts_profileVisitsStd < 3, !is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
)
plot1 <- df %>%
filter(counts_kissesStd < 2, !is.na(night_owl), !is.na(has_social)) %>%
mutate(has_emoji = factor(has_emoji, labels = c("No", "Yes")),
night_owl = factor(night_owl, labels = c("No", "Yes")),
has_social = factor(has_social, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(has_emoji, has_social), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
has_emoji = "Emoji",
has_social = "Social Media")) %>%
ggplot(aes(x = Value, y = counts_kissesStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Kisses Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
) +
scale_y_continuous(breaks = c(-1, 0, 1, 2))
plot2 <- df %>%
filter(counts_profileVisitsStd < 2, !is.na(night_owl), !is.na(isOnline)) %>%
mutate(night_owl = factor(night_owl, labels = c("No", "Yes")),
isOnline = factor(isOnline, labels = c("No", "Yes"))) %>%
pivot_longer(cols = c(night_owl, isOnline), names_to = "Factor", values_to = "Value") %>%
mutate(Factor = recode(Factor,
night_owl = "Night Owl",
isOnline = "Online")) %>%
ggplot(aes(x = Value, y = counts_profileVisitsStd, fill = Value)) +
geom_boxplot(colour = "white", alpha = 0.8) +
scale_fill_manual(values = c("#1beaa7", "#8c2aef")) +
facet_wrap(~ Factor, scales = "free", strip.position = "top") +
labs(x = "", y = "Profile Visits Count", fill = "") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_blank()
) +
scale_y_continuous(breaks = c(-1, 0, 1, 2))
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_kissesStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title = element_blank(),
legend.position = "right") +
coord_fixed()
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title = element_blank(),
legend.position = "right") +
coord_fixed()
# Load packages in use
pacman::p_load(dplyr, ggplot2, tidyverse, rsample, caret, glmnet, vip, pdp, stringr,
tidytext, emoji, stopwords, ggridges, wordcloud2, ggmap, readxl, maps,
viridis, eurostat, corrplot, GGally, reshape2, grid, ellipse)
df_sub <- df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")]
ggpairs(df_sub,
upper = list(continuous = wrap("cor", size = 3)),
diag = list(continuous = wrap("barDiag", colour = "#1beaa7")),
lower = list(continuous = "ellipse"),
progress = FALSE) +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1, size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title = element_blank(),
legend.position = "right")
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Calculate confidence ellipse
conf_ellipse <- cor2ellipse(correlation_matrix, level = 0.95)
# select relevant columns
df_select <- df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")]
# Create a function to add ellipses
ellipse_fun <- function(data, mapping, ...){
x_var <- deparse(mapping$x)
y_var <- deparse(mapping$y)
cor_ellipse <- with(data, ellipse::ellipse(cor(x = df_select[,x_var], y = df_select[,y_var]),
scale = c(sd(df_select[,x_var]), sd(df_select[,y_var])),
centre = c(mean(df_select[,x_var]), mean(df_select[,y_var]))))
geom_path(data = cor_ellipse, aes(x = x, y = y), ...)
}
# Create a custom GGally function to add ellipses to the scatter plots
my_fn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point() +
ellipse_fun(data, mapping)
p
}
# Create the ggpairs correlogram with ellipses
correlogram <- GGally::ggpairs(data = df_select, lower = list(continuous = my_fn))
print(correlogram)
# Select the variables
df_select <- df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat",
"flirtInterests_friends", "flirtInterests_date", "isMobile",
"verified", "shareProfileEnabled")]
# Calculate the correlation matrix
correlation_matrix <- cor(df_select, use="pairwise.complete.obs")
# Order the correlation matrix
ord <- order(correlation_matrix[1, ])
correlation_matrix_ord <- correlation_matrix[ord, ord]
# Build a panel of 100 colors with RColorBrewer
my_colors <- brewer.pal(5, "Spectral")
# Select the variables
df_select <- df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat",
"flirtInterests_friends", "flirtInterests_date", "isMobile",
"verified", "shareProfileEnabled")]
# Calculate the correlation matrix
correlation_matrix <- cor(df_select, use="pairwise.complete.obs")
# Order the correlation matrix
ord <- order(correlation_matrix[1, ])
correlation_matrix_ord <- correlation_matrix[ord, ord]
# Build a panel of 100 colors with RColorBrewer
my_colors <- palette
my_colors <- colorRampPalette(my_colors)(100)
# Create the correlation plot
plotcorr(correlation_matrix_ord, col=my_colors[correlation_matrix_ord*50+50], mar=c(1,1,1,1))
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_kissesStd", "counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title = element_blank(),
legend.position = "right") +
coord_fixed()
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title.x = element_blank(),
legend.position = "right") +
coord_fixed()
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_profileVisitsStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "right") +
coord_fixed()
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_kissesStd", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "right") +
coord_fixed()
# Calculate the correlation matrix
correlation_matrix <- cor(df[c("counts_kissesStd", "age", "flirtInterests_chat", "flirtInterests_friends",
"flirtInterests_date", "isMobile", "verified", "shareProfileEnabled")])
# Melt the correlation matrix
correlation_matrix_melt <- melt(correlation_matrix)
# Create the ggplot object
ggplot(data = correlation_matrix_melt, aes(x=Var1, y=Var2, fill=value)) +
geom_tile(color = "white") +
geom_text(aes(Var1, Var2, label = round(value, 2)), color = "black", size = 4) +
scale_fill_gradient2(low = "#1beaa7", high = "#8c2aef", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
th +
theme(
strip.background = element_blank(),
strip.text = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "right") +
coord_fixed()
df %>%
ggplot(aes(y = counts_kissesStd, x = counts_pictures)) +
geom_point(aes(fill = factor(has_emoji), size = counts_details), pch = 21, alpha = 0.8, colour = "white") +
scale_fill_manual(values = c("#1beaa7", "#8c2aef"), name = "Has Emoji", labels = c("No Emoji", "Contains Emoji")) +
scale_size(range = c(0.2, 3)) +
labs(y = "Profile Visits Count", x = "Pictures Count", size = "Details Count", fill = "Contains Emoji") +
th + theme(legend.position = "right") +
geom_smooth(aes(colour = factor(has_emoji)), method = "loess", se = FALSE) +
scale_colour_manual(values = c("#1beaa7", "#8c2aef"), name = "Has Emoji", labels = c("No Emoji", "Contains Emoji"))
df %>%
ggplot(aes(y = counts_kissesStd, x = counts_picturesStd)) +
geom_point(aes(fill = factor(has_emoji), size = counts_details), pch = 21, alpha = 0.8, colour = "white") +
scale_fill_manual(values = c("#1beaa7", "#8c2aef"), name = "Has Emoji", labels = c("No Emoji", "Contains Emoji")) +
scale_size(range = c(0.2, 3)) +
labs(y = "Profile Visits Count", x = "Pictures Count", size = "Details Count", fill = "Contains Emoji") +
th + theme(legend.position = "right") +
geom_smooth(aes(colour = factor(has_emoji)), method = "loess", se = FALSE) +
scale_colour_manual(values = c("#1beaa7", "#8c2aef"), name = "Has Emoji", labels = c("No Emoji", "Contains Emoji"))
