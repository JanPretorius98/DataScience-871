# Housekeeping ----
library(tidyverse)
library(readxl)

# Define plot themes and palettes----
palette_2 <- c("#28b886", "#F44743")
palette_3 <- c("#28b886", "#F44743", "#e7d684")
palette_5 <- c("#378490", "#28b886", "#e7d684", "#f4a057", "#F44743")
palette_8 <- c("#378490", "#28b886", "#78C19C", "#E9DDA3","#e7d684", "#f4a057", "#F27B60", "#F44743")

th <- theme(legend.position = "bottom",
            panel.background = element_blank(),
            plot.background = element_rect(fill = "white", color = "white"),
            panel.grid.major = element_line(color="#808080", size = 0.1),
            panel.grid.minor = element_line(color="#808080", size = 0.1),
            axis.title.x=element_text(colour="black", size = 12,family = "arial", vjust=-2,hjust=0.5),
            axis.title.y=element_text(colour="black", size = 12,family = "arial",vjust = 3,hjust=0.5),
            axis.text.y=element_text(colour ="black", size = 10, family = "arial"),
            axis.text.x=element_text(colour="black", size = 10,family = "arial"),
            plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
            plot.title = element_text(colour="black", size = 16,family = "arial",hjust=0.5, face = "bold"),
            plot.subtitle = element_text(colour="black", size = 14,family = "arial"),
            plot.caption = element_text(colour="black", size = 10,family = "arial"),
            legend.text = element_text(colour="black", size = 12,family = "arial"),
            legend.title = element_text(colour="black", size = 12,family = "arial", hjust=3, face = "bold"),
            axis.ticks = element_blank(),
            strip.text = element_text(colour="black", size = 12,family = "arial", vjust=1,hjust=0.5))

# Import data ----
df <- read_xlsx("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Working Data/Working_Data.xlsx")
df <- df %>% 
 filter(Race_White == 1 | Race_Coloured == 1)


#  Figure 1: Deaths over time ----
#Prep data

#Proportion deaths over time
#Count number of white deaths
df_count <- df %>% count(Race_White, Year) %>%  #count number of obs
na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race_White=="0"),] #subset white obs
df_count <- df_count %>%
  mutate(Race_White = str_replace(string = Race_White, pattern = "1", replacement = "White")) #mutate obs from 1 to White
colnames(df_count)[1]  <- "Race" #rename column
colnames(df_count)[3]  <- "Total" #rename column
plot1 <- df_count #store counting df as new df

#Count number of coloured deaths
df_count <- df %>% count(Race_Coloured, Year) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race_Coloured=="0"),] #subset white obs
df_count <- df_count %>%
  mutate(Race_Coloured= str_replace(string = Race_Coloured, pattern = "1", replacement = "Coloured")) #mutate obs from 1 to White
colnames(df_count)[1]  <- "Race" #rename column
colnames(df_count)[3]  <- "Total" #rename column
plot1 <- bind_rows(plot1, df_count) #store counting df as new df

#Count number of infant deaths
df_count <- df %>% count(Race, Year, `Age_Group_0-4`) #count obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
df_count <- df_count[!(df_count$`Age_Group_0-4`=="0"),] #subset infants obs
colnames(df_count)[4]  <- "Infant" #rename col
df_count <- df_count[,-3]

plot1 = merge(x = plot1, y = df_count) #merge datafarmes

#Count number of 18+ deaths
df_count <- df[df$age_years >= 18,]
df_count <- df_count %>% count(Race, Year) #count obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
colnames(df_count)[3]  <- "Adults" #rename col

plot1 = merge(x = plot1, y = df_count) #merge datafarmes

for(i in 1:length(plot1$Year)){
  plot1$prop_inf[i] <- plot1$Infant[i] / plot1$Total[i]
  plot1$prop_adult[i] <- plot1$Adults[i] / plot1$Total[i]
} #Get proportion of deaths for infants and adults

plot1$Year <- as.numeric(plot1$Year)

#  Plot
#Figure 1: Infants
figure1_1_v1 <- plot1 %>% #Version 1 with linear model
  ggplot(aes(x=Year, y=prop_inf, group=Race, colour=Race))+
  geom_line(size=0.8)+
  geom_smooth(method = lm, size=0,level=0.95, aes(fill=Race),alpha=0.2) +
  scale_color_manual(values = palette_2, name = "Race", labels = c("Coloured", "White"))+
  scale_fill_manual(values = palette_2) +
  labs(
    y = "Infant Deaths (Proportion of Total Deaths by Race)",
    title = "Infant (0-4 Years) Deaths over Time"
  )+
  th + scale_x_continuous(name="Year", limits=c(1900, 1929), breaks = c(1900,1909,1919,1929))

figure1_1_v2 <- plot1 %>% #Version 2 with loess fit
  ggplot(aes(x=Year, y=prop_inf, group=Race, colour=Race))+
  geom_line(size=0.8)+
  geom_smooth(method = loess, size=0,level=0.95, aes(fill=Race),alpha=0.2)+
  theme_ipsum() +
  scale_color_manual(values = palette_2,name = "Race", labels = c("Coloured", "White"))+
  scale_fill_manual(values = palette_2)+
  labs(
    y = "Infant Deaths (Proportion of Total Deaths by Race)",
    x = "Year",
    title = "Infant (0-4 Years) Deaths over Time"
  )+
  th + scale_x_continuous(name="Year", limits=c(1900, 1929), breaks = c(1900,1909,1919,1929))

#Figure 1: Adults
figure1_2_v1 <- plot1 %>% #Version 1 with linear model
  ggplot(aes(x=Year, y=prop_adult, group=Race, colour=Race))+
  geom_line(size=0.8)+
  geom_smooth(method = lm, size=0,level=0.95, aes(fill=Race),alpha=0.2)+
  theme_ipsum() +
  scale_color_manual(values = palette_2,name = "Race", labels = c("Coloured", "White"))+
  scale_fill_manual(values = palette_2)+
  labs(
    y = "Adult Deaths (Proportion of Total Deaths by Race)",
    x = "Year",
    title = "Adult (18+ Years) Deaths over Time"
  ) +
  th+ scale_x_continuous(name="Year", limits=c(1900, 1929), breaks = c(1900,1909,1919,1929))

figure1_2_v2 <- plot1 %>% #Version 2 with loess fit
  ggplot(aes(x=Year, y=prop_adult, group=Race, colour=Race))+
  geom_line(size=0.8)+
  geom_smooth(method = loess, size=0,level=0.95, aes(fill=Race),alpha=0.2)+
  theme_ipsum() +
  scale_color_manual(values = palette_2,name = "Race", labels = c("Coloured", "White"))+
  scale_fill_manual(values = palette_2)+
  labs(
    y = "Adult Deaths (Proportion of Total Deaths by Race)",
    x = "Year",
    title = "Adult (18+ Years) Deaths over Time"
  ) +
  th+ scale_x_continuous(name="Year", limits=c(1900, 1929), breaks = c(1900,1909,1919,1929))

ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig1_1_v1.png", 
       plot = figure1_1_v1, height = 5, width = 8)
ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig1_1_v2.png", 
       plot = figure1_1_v2, height = 5, width = 8)
ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig1_2_v1.png", 
       plot = figure1_2_v1, height = 5, width = 8)
ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig1_2_v2.png", 
       plot = figure1_2_v2, height = 5, width = 8)


#  Figure 2: Density plots ----
plot2_Age <- df %>% 
  filter(age_years < 690)

figure2_Age <- plot2_Age %>%
  ggplot(aes(x = age_years, group = Race, fill = Race)) +
  geom_density(alpha=0.6, adjust = 2) +
  scale_fill_manual(values = palette_3, name = "Race", labels = c("Coloured", "White"))+
  labs(
    y = "Density",
    x = "Age at Time of Death (Years)",
    title = "Distribution of Age at Time of Death by Race"
  )+
  th

plot2_Duration <- df %>% 
  filter(DOLI_days < 365)

figure2_Duration <- plot2_Duration %>%
  ggplot(aes(x = DOLI_days, group = Race, fill = Race)) +
  geom_density(alpha=0.6, adjust = 2) +
  scale_fill_manual(values = palette_2, name = "Race", labels = c("Coloured", "White"))+
  labs(
    y = "Density",
    x = "Duration of Last Illness (Days)",
    title = "Distribution of Duration of Last Illness by Race"
  )+
  th

ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig2_duration.png", 
       plot = figure2_Duration, height = 5, width = 8)
ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig2_age.png", 
       plot = figure2_Age, height = 5, width = 8)

#  Figure 3: Occupation Plots ----
  # Prep Data
df_count <- df %>% count(Race, Occupation, lit) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count %>%
  mutate(lit = str_replace(string = lit, pattern = "1", replacement = "Signature")) %>%
  mutate(lit = str_replace(string = lit, pattern = "0", replacement = "Mark"))
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
df_count <- subset(df_count, Occupation != "Children")

plot3 <- df_count

df_count <-  df %>% count(Race, Occupation, Year) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
df_count <- subset(df_count, Occupation != "Children")

plot3_time <- df_count %>% 
  mutate(Year = as.numeric(Year))

  # Plot
figure3 <- plot3 %>%
  ggplot(aes(fill=Occupation, y=n, x=Race)) + 
  geom_bar(position="fill", stat="identity", alpha=0.8)+
  facet_wrap(~lit)+
  theme_ipsum() +
  scale_fill_manual(values = palette_5, name="Occupational Group")+
  labs(
    y = "Proportion",
    x = "Race",
    title = "Signed or Marked by Informant"
  )+
  th +
  theme(legend.position = "bottom",
        legend.title = element_text(hjust = 0))

figure3_time <- plot3_time %>%
  ggplot(aes(fill=Occupation, y=n, x=Year)) + 
  geom_bar(position="fill", stat="identity", alpha=0.8)+
  facet_wrap(~Race)+
  theme_ipsum()+
  scale_fill_manual(values = palette_5, name="Occupational Group")+
  labs(
    y = "Proportion",
    x = "Year",
    title = "Occupation Over Time by Race"
  )+
  th +
  theme(legend.position = "bottom",
        legend.title = element_text(hjust = 0))+ 
  scale_x_continuous(name="Year", limits=c(1899, 1930), breaks = c(1900,1909,1919,1929))

ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig3.png", 
       plot = figure3, height = 6, width = 10)
ggsave("/Users/janhendrikpretorius/Library/CloudStorage/OneDrive-StellenboschUniversity/Masters-2023/Research Papers/Death Certificates/Plots/fig3_time.png", 
       plot = figure3_time, height = 6, width = 10)

#  Figure 4: CoD ----
  # Prep data
#Over time
df_count <- df %>% count(Race, Year, cod) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
plot4_time <- df_count

#Static
df_count <- df %>% count(Race, cod) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
plot4_static <- df_count

#Over time Infants
df_count <- df %>% count(Race, Year, cod, `0-4_Years`) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
df_count <- df_count[!(df_count$`0-4_Years`=="0"),] #subset infants
colnames(df_count)[5]  <- "Infant" #rename col
df_count <- df_count[,-4]
plot4_time_inf <- df_count

#Over time Adults
df_count <- df[df$Age_Years >= 18,] #subset 18+ years
df_count <- df_count %>% count(Race, Year, cod) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
colnames(df_count)[4]  <- "Adult" #rename col
plot4_time_adult <- df_count

#Static Infants
df_count <- df %>% count(Race, cod, `0-4_Years`) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
df_count <- df_count[!(df_count$`0-4_Years`=="0"),] #subset infants
colnames(df_count)[4]  <- "Infant" #rename col
df_count <- df_count[,-3]
plot4_static_inf <- df_count

#Static Adults
df_count <- df[df$Age_Years >= 18,] #subset 18+ years
df_count <- df_count %>% count(Race, cod) #count number of obs
df_count <- na.omit(df_count) #remove NA values
df_count <- df_count[!(df_count$Race=="Black"),] #subset white and coloured obs
colnames(df_count)[3]  <- "Adult" #rename col
plot4_static_adult <- df_count


