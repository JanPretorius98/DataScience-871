"0","df_city <- read_excel(""geocode_latlon.xlsx"")"
"0",""
"0","df_city <- df_city %>%"
"0","  mutate(mean_profile_views = as.numeric(mean_profile_views),"
"0","         lat = as.numeric(lat),"
"0","         lon = as.numeric(lon)) %>% "
"0","  filter(!is.na(lon),"
"0","         mean_profile_views > 0,"
"0","         lon > -90 & lon < 100,"
"0","         lat > 0)"
"0",""
"0","# Filter by countries after data cleaning and transformation"
"0","df_city <- df_city %>%"
"0","  filter(substr(address, nchar(address) - 1, nchar(address)) %in% eu_countries$code | address == ""UK""| address == ""CZ"" | address == ""CH"")"
"0",""
"0","world <- map_data(""world"") %>%"
"0","  filter(region %in% eu_countries$name | region == ""UK"" | region == ""Czech Republic"" | region == ""Switzerland"")"
"0",""
"0","# Creating ggplot with map"
"0",""
"0","map_bg <- ggplot(data = world) +"
"0","  geom_polygon(aes(x = long, y = lat, group = group), fill = ""white"", colour = ""#000123"") +"
"0","  coord_map() +"
"0","  theme_void()"
"0",""
"0","# Adding scatterplot on the map"
"0","views <- map_bg +"
"0","  geom_point(data = df_city, aes(x = lon, y = lat, color = mean_profile_views, size = mean_profile_views), alpha = 0.8) +"
"0","  scale_colour_gradient("
"0","    name = 'Mean Profile Views',"
"0","    limits = range(df_city$mean_profile_views),"
"0","    low = ""#8c2aef"","
"0","    high = ""#1beaa7"""
"0","  ) +"
"0","  scale_size_continuous(guide = ""none"", range = c(1, 8)) +"
"0","  theme(plot.background = element_rect(fill = ""#000123"", color = ""#000123""),"
"0","        panel.background = element_blank(),"
"0","        panel.grid.major = element_blank(),"
"0","        panel.grid.minor = element_blank(),"
"0","        axis.text = element_blank(),"
"0","        legend.key = element_rect(fill = ""#000123"", color = ""#000123""),"
"0","        legend.background = element_rect(fill = ""#000123""),"
"0","        legend.text = element_text(colour = ""white""),"
"0","        legend.title = element_text(colour = ""white"", face = ""bold""))"
"0",""
"0","# Group by country and calculate mean profile views"
"0","df_city_grouped <- df_city %>%"
"0","  mutate(country_code = substr(address, nchar(address) - 1, nchar(address))) %>%"
"0","  group_by(country_code) %>%"
"0","  summarise(mean_profile_views = mean(mean_profile_views, na.rm = TRUE))"
"0",""
"0","# Convert two-letter country codes to full country names"
"0","df_city_grouped <- left_join(df_city_grouped, eu_countries, by = c(""country_code"" = ""code""))"
"0",""
"0","# Join with the 'world' dataframe"
"0","world <- left_join(world, df_city_grouped, by = c(""region"" = ""name"")) "
"0","world <- world %>% "
"0","  filter(!is.na(mean_profile_views))"
"0",""
"0","# Create the choropleth map"
"0","choropleth <- map_bg + "
"0","  geom_polygon(data = world, aes(x = long, y = lat, fill = mean_profile_views, group = group), color = ""#000123"") +"
"0","  scale_fill_gradient(name = 'Mean Profile Views',"
"0","                      low = ""#8c2aef"","
"0","                      high = ""#1beaa7"","
"0","                      na.value = """") +"
"0","  theme(plot.background = element_rect(fill = ""#000123"", color = ""#000123""),"
"0","        legend.key = element_rect(fill = ""#000123"", color = ""#000123""),"
"0","        legend.background = element_rect(fill = ""#000123""),"
"0","        legend.text = element_text(colour = ""white""),"
"0","        legend.title = element_text(colour = ""white"", face = ""bold""))"
"0",""
"0","views <- ggdraw(views) + theme(panel.background = element_rect(fill = ""#000123"", colour = ""#000123""))"
"0","choropleth <- ggdraw(choropleth) + theme(panel.background = element_rect(fill = ""#000123"", colour = ""#000123""))"
"0",""
